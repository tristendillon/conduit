// Code generated by conduit. DO NOT EDIT.

package generated

import (
	"github.com/tristendillon/conduit/core/models"
)

func GetRouteTree() *models.RouteTree {
	tree := models.NewRouteTree()

{{- range .Routes }}
	// Route: {{ .APIPath }}
	tree.AddRoute(&models.ParsedFile{
		Path:        "{{ .ParsedFile.Path }}",
		RelPath:     "{{ .ParsedFile.RelPath }}",
		PackageName: "{{ .ParsedFile.PackageName }}",
		Methods:     []string{ {{- range $i, $method := .ParsedFile.Methods }}{{ if $i }}, {{ end }}"{{ $method }}"{{ end }} },
	})
{{ end }}

	return tree
}

func GetRoutes() []models.Route {
	return []models.Route{
{{- range .Routes }}
		{
			APIPath:    "{{ .APIPath }}",
			FolderPath: "{{ .FolderPath }}",
			Segments: []models.RouteSegment{
{{- range .Segments }}
				{
					Name:      "{{ .Name }}",
					APIName:   "{{ .APIName }}",
					IsParam:   {{ .IsParam }},
					ParamName: "{{ .ParamName }}",
				},
{{- end }}
			},
			Parameters: []string{ {{- range $i, $param := .Parameters }}{{ if $i }}, {{ end }}"{{ $param }}"{{ end }} },
			IsLeaf:     {{ .IsLeaf }},
			Methods:    []string{ {{- range $i, $method := .Methods }}{{ if $i }}, {{ end }}"{{ $method }}"{{ end }} },
			ParsedFile: &models.ParsedFile{
				Path:        "{{ .ParsedFile.Path }}",
				RelPath:     "{{ .ParsedFile.RelPath }}",
				PackageName: "{{ .ParsedFile.PackageName }}",
				Methods:     []string{ {{- range $i, $method := .ParsedFile.Methods }}{{ if $i }}, {{ end }}"{{ $method }}"{{ end }} },
			},
		},
{{- end }}
	}
}

var routeMap = map[string]*models.Route{
{{- range .Routes }}
	"{{ .APIPath }}": &models.Route{
		APIPath:    "{{ .APIPath }}",
		FolderPath: "{{ .FolderPath }}",
		Parameters: []string{ {{- range $i, $param := .Parameters }}{{ if $i }}, {{ end }}"{{ $param }}"{{ end }} },
		IsLeaf:     {{ .IsLeaf }},
		Methods:    []string{ {{- range $i, $method := .Methods }}{{ if $i }}, {{ end }}"{{ $method }}"{{ end }} },
	},
{{- end }}
}

func GetRouteByAPIPath(apiPath string) (*models.Route, bool) {
	route, exists := routeMap[apiPath]
	return route, exists
}

func GetAllAPIPaths() []string {
	paths := make([]string, 0, len(routeMap))
	for path := range routeMap {
		paths = append(paths, path)
	}
	return paths
}