// Code generated by conduit at {{ .Timestamp.Format "2006-01-02 15:04:05" }}. DO NOT EDIT.
// Source: {{ .Route.ParsedFile.RelPath }}

package {{ .Route.ParsedFile.PackageName }}_gen

import (
	"net/http"
	{{ if .Route.ParsedFile.Dependencies }}
	{{ range .Route.ParsedFile.Dependencies.StandardLibImports }}
	"{{ . }}"
	{{ end }}
	{{ range .Route.ParsedFile.Dependencies.ExternalImports }}
	"{{ . }}"
	{{ end }}
	{{ end }}
	{{ range .CopiedDependencies }}
	"{{ .ImportPath }}"
	{{ end }}
)

{{ range .Route.ParsedFile.Functions -}}
// {{ .Name }} - Generated from original source
func {{ .Signature }} {
{{ .Body }}
}

{{ end -}}

// SetupRoutes registers all handlers for this route with the provided mux
func SetupRoutes(mux *http.ServeMux, basePath string) {
	{{ range .Route.ParsedFile.Functions }}
	mux.HandleFunc("{{ .Method }} "+basePath, {{ .Name }})
	{{ end }}
}

// GetRouteMethods returns all HTTP methods supported by this route
func GetRouteMethods() []string {
	return []string{ {{ range $i, $method := .Route.Methods }}{{ if $i }}, {{ end }}"{{ $method }}"{{ end }} }
}

// GetRouteInfo returns metadata about this route
func GetRouteInfo() RouteInfo {
	return RouteInfo{
		APIPath:    "{{ .Route.APIPath }}",
		FolderPath: "{{ .Route.FolderPath }}",
		Methods:    GetRouteMethods(),
		Parameters: []string{ {{ range $i, $param := .Route.Parameters }}{{ if $i }}, {{ end }}"{{ $param }}"{{ end }} },
	}
}

type RouteInfo struct {
	APIPath    string
	FolderPath string
	Methods    []string
	Parameters []string
}