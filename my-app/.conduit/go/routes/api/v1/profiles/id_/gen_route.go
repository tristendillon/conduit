// Code generated by conduit at 2025-09-15 09:00:01. DO NOT EDIT.
// Source: api/v1/profiles/id_

package id__gen

import (
	"net/http"
	
	
	"fmt"
	
	
	
	
)

// GET - Generated from original source
func GET(w http.ResponseWriter, r *http.Request) {
id := r.URL.Query().Get("id")
	// profile := profile_repo.FindProfile(id)
	// if profile == nil {
	// 	http.Error(w, "Profile not found", http.StatusNotFound)
	// 	return
	// }
	// data, err := json.Marshal(profile)
	// if err != nil {
	// 	http.Error(w, "Internal Server Error", http.StatusInternalServerError)
	// 	return
	// }
	w.WriteHeader(http.StatusOK)
	w.Write([]byte(id))
}

// DELETE - Generated from original source
func DELETE(w http.ResponseWriter, r *http.Request) {
id := r.URL.Query().Get("id")
	fmt.Println(id)
	// profile := profile_repo.DeleteProfile(id)
	// if profile == -1 {
	// 	http.Error(w, "Profile not found", http.StatusNotFound)
	// 	return
	// }

	w.WriteHeader(http.StatusOK)
	w.Write([]byte("Successfully deleted profile"))
}

// SetupRoutes registers all handlers for this route with the provided mux
func SetupRoutes(mux *http.ServeMux, basePath string) {
	
	mux.HandleFunc("GET "+basePath, GET)
	
	mux.HandleFunc("DELETE "+basePath, DELETE)
	
}

// GetRouteMethods returns all HTTP methods supported by this route
func GetRouteMethods() []string {
	return []string{ "GET", "DELETE" }
}

// GetRouteInfo returns metadata about this route
func GetRouteInfo() RouteInfo {
	return RouteInfo{
		APIPath:    "api/v1/profiles/:id",
		FolderPath: "api/v1/profiles/id_",
		Methods:    GetRouteMethods(),
		Parameters: []string{ "id" },
	}
}

type RouteInfo struct {
	APIPath    string
	FolderPath string
	Methods    []string
	Parameters []string
}