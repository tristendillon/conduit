// Code generated by conduit at 2025-09-14 10:36:02. DO NOT EDIT.
// Auto-aggregates all generated route handlers

package generated

import (
	"net/http"

__conduit_health_route "my-app/.conduit/go/routes/__conduit/health"
api_v1_profiles_route "my-app/.conduit/go/routes/api/v1/profiles"
api_v1_profiles_id__route "my-app/.conduit/go/routes/api/v1/profiles/id_"
api_v1_users_route "my-app/.conduit/go/routes/api/v1/users"
api_v1_users_id__route "my-app/.conduit/go/routes/api/v1/users/id_"

)

// GetConfiguredRouter returns a fully configured HTTP router with all routes
func GetConfiguredRouter() *http.ServeMux {
	mux := http.NewServeMux()
	RegisterRoutes(mux)
	return mux
}

// RegisterRoutes registers all routes with the provided mux
func RegisterRoutes(mux *http.ServeMux) {
// Register routes for __conduit/health
	__conduit_health_route.SetupRoutes(mux, "/__conduit/health")
// Register routes for api/v1/profiles
	api_v1_profiles_route.SetupRoutes(mux, "/api/v1/profiles")
// Register routes for api/v1/profiles/id_
	api_v1_profiles_id__route.SetupRoutes(mux, "/api/v1/profiles/:id")
// Register routes for api/v1/users
	api_v1_users_route.SetupRoutes(mux, "/api/v1/users")
// Register routes for api/v1/users/id_
	api_v1_users_id__route.SetupRoutes(mux, "/api/v1/users/:id")

}

// GetAllRoutes returns metadata about all registered routes
func GetAllRoutes() []RouteInfo {
	return []RouteInfo{
{
			APIPath:    "__conduit/health",
			FolderPath: "__conduit/health",
			Methods:    []string{ "GET" },
			Parameters: []string{  },
		},
{
			APIPath:    "api/v1/profiles",
			FolderPath: "api/v1/profiles",
			Methods:    []string{ "GET" },
			Parameters: []string{  },
		},
{
			APIPath:    "api/v1/profiles/:id",
			FolderPath: "api/v1/profiles/id_",
			Methods:    []string{ "GET", "DELETE" },
			Parameters: []string{ "id" },
		},
{
			APIPath:    "api/v1/users",
			FolderPath: "api/v1/users",
			Methods:    []string{ "GET" },
			Parameters: []string{  },
		},
{
			APIPath:    "api/v1/users/:id",
			FolderPath: "api/v1/users/id_",
			Methods:    []string{ "GET", "DELETE" },
			Parameters: []string{ "id" },
		},

	}
}

// GetRouteByPath returns route information for a specific API path
func GetRouteByPath(apiPath string) *RouteInfo {
	routes := GetAllRoutes()
	for _, route := range routes {
		if route.APIPath == apiPath {
			return &route
		}
	}
	return nil
}

// GetAllAPIPaths returns all registered API paths
func GetAllAPIPaths() []string {
	routes := GetAllRoutes()
	paths := make([]string, len(routes))
	for i, route := range routes {
		paths[i] = route.APIPath
	}
	return paths
}

// RouteInfo contains metadata about a route
type RouteInfo struct {
	APIPath    string
	FolderPath string
	Methods    []string
	Parameters []string
}